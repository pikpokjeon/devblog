{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/fibodp","result":{"data":{"markdownRemark":{"id":"9f6db10d-cf70-5945-89a0-90fad887725a","html":"<h3 id=\"피보나치-수열\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%EC%88%98%EC%97%B4\" aria-label=\"피보나치 수열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>피보나치 수열</h3>\n<ul>\n<li>첫째 및 둘째 항이 1이며 그 뒤의 모든 항은 바로 앞 두 항의 합인 수열이다.</li>\n<li>0,1,1,2,3,5…</li>\n</ul>\n<h3 id=\"dynamic-programming\" style=\"position:relative;\"><a href=\"#dynamic-programming\" aria-label=\"dynamic programming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Programming</h3>\n<ul>\n<li>동적계획법</li>\n<li>작은 문제들을 점화식으로 만들어서 해결하는 방법.</li>\n<li>매번 재계산하지 않기 위해 값을 저장 (memoization)하고 재사용합니다.</li>\n</ul>\n<h4 id=\"프로그래머스-피보나치수열-문제-레벨2\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%EC%88%98%EC%97%B4-%EB%AC%B8%EC%A0%9C-%EB%A0%88%EB%B2%A82\" aria-label=\"프로그래머스 피보나치수열 문제 레벨2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래머스 피보나치수열 문제 (레벨2)</h4>\n<p> 피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여\nF(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.</p>\n<p> 예를들어</p>\n<p> F(2) = F(0) + F(1) = 0 + 1 = 1\nF(3) = F(1) + F(2) = 1 + 1 = 2\nF(4) = F(2) + F(3) = 1 + 2 = 3\nF(5) = F(3) + F(4) = 2 + 3 = 5\n와 같이 이어집니다.</p>\n<p> 2 이상의 n이 입력되었을 때,\nn번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수,\nsolution을 완성해 주세요.</p>\n<p> 제한 사항</p>\n<ul>\n<li>n은 1이상, 100000이하인 자연수입니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// (마지막에 나눈 값을 찾기위한 연산을 해준다!!!)</span>\n        <span class=\"token comment\">// 틀린 이유 -> (a[i] + a [i-1]) %1234567  </span>\n        <span class=\"token comment\">// 위와 같이 연산하면, bigInt 를 사용해야 한다.</span>\n\n        <span class=\"token comment\">// 다음 값을 알기위한 점화식</span>\n        a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> a <span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span><span class=\"token number\">1234567</span> \n    <span class=\"token punctuation\">}</span>\n    answer <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span>  <span class=\"token number\">1234567</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Recursion을 사용하면 시간초과가 나니 주의하자!!</p>","fields":{"slug":"/posts/fibodp","tagSlugs":["/tag/javascript/","/tag/algorithm/","/tag/프로그래머스/"]},"frontmatter":{"date":"2021-01-23T22:40:32.169Z","description":"피보나치 수열을 동적계획 방법으로 풀기","tags":["Javascript","Algorithm","프로그래머스"],"title":"[NodeJS] 피보나치수열 Dynamic Programming"}}},"pageContext":{"slug":"/posts/fibodp"}},"staticQueryHashes":["1140640941","251939775","401334301"]}