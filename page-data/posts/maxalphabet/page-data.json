{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/maxalphabet","result":{"data":{"markdownRemark":{"id":"c7b7ecf8-43c8-568f-aca1-e4f29c724375","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 문제</span>\n<span class=\"token comment\"># 알파벳 대소문자로 된 단어가 주어지면, </span>\n<span class=\"token comment\"># 이 단어에서 가장 많이 사용된 알파벳이 무엇인지 알아내는 프로그램을 작성하시오. </span>\n<span class=\"token comment\"># 단, 대문자와 소문자를 구분하지 않는다.</span>\n\n<span class=\"token comment\"># 입력</span>\n<span class=\"token comment\"># 첫째 줄에 알파벳 대소문자로 이루어진 단어가 주어진다. </span>\n<span class=\"token comment\"># 주어지는 단어의 길이는 1,000,000을 넘지 않는다.</span>\n\n<span class=\"token comment\"># 출력</span>\n<span class=\"token comment\"># 첫째 줄에 이 단어에서 가장 많이 사용된 알파벳을 대문자로 출력한다. </span>\n<span class=\"token comment\"># 단, 가장 많이 사용된 알파벳이 여러 개 존재하는 경우에는 ?를 출력한다.</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">u\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">u\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 문자열을 소문자로 하고 쏘팅 </span>\n<span class=\"token comment\"># (사실 대문자로 출력해야해서 대문자로 바꾸는게 옳다)</span>\n<span class=\"token comment\"># 쏘팅도 사실 필요가 없다</span>\n\nS <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 중복제거 셋 생성</span>\n\nSET <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 구한 알파벳들을 객체에 키로 저장</span>\nD <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> A <span class=\"token keyword\">in</span> SET<span class=\"token punctuation\">:</span>\n    D<span class=\"token punctuation\">[</span>A<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n\n\n\n\n<span class=\"token comment\"># 문자열 길이만큼 돌면서 객체 값에 +=1 </span>\n<span class=\"token keyword\">for</span> alpha <span class=\"token keyword\">in</span> SET<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> alpha<span class=\"token punctuation\">:</span>\n            D<span class=\"token punctuation\">[</span>alpha<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n\n<span class=\"token comment\"># (위 코드를 아래처럼 하면 한번에 풀 수 있다)</span>\n<span class=\"token keyword\">for</span> character <span class=\"token keyword\">in</span> S<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> character <span class=\"token keyword\">in</span> D<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        D<span class=\"token punctuation\">[</span>character<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 만약 알파벳이 있는데 딕셔너리에 추가 안된경우</span>\n        <span class=\"token comment\"># 존재하니 1로 초기화해준다</span>\n        D<span class=\"token punctuation\">[</span>character<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 2차원 무언가인데 그냥 배열처럼 쓸수 있다</span>\n<span class=\"token comment\"># D.items()</span>\n<span class=\"token comment\"># 여기서 밸류가 가장 큰 것을 고른다</span>\nanswer <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\nMAX <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\na <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> D<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> MAX <span class=\"token operator\">==</span> v<span class=\"token punctuation\">:</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        a <span class=\"token operator\">=</span> k\n<span class=\"token keyword\">if</span> count <span class=\"token operator\">>=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/posts/maxalphabet","tagSlugs":["/tag/알고리즘/","/tag/파이썬/"]},"frontmatter":{"date":"2021-01-11T23:46:37.121Z","description":"가장 많은 알파벳을 구하는 경우의 수","tags":["알고리즘","파이썬"],"title":"[python]가장 많은 알파벳","socialImage":null}}},"pageContext":{"slug":"/posts/maxalphabet"}},"staticQueryHashes":["251939775","401334301","825871152"]}