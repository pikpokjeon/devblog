{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/pubsubStore","result":{"data":{"markdownRemark":{"id":"452f3210-c859-56d4-b493-b27a4097b3e2","html":"<p>&#x3C;작성중></p>\n<h3 id=\"여러-함수가-오리진이-같은-데이터를-활용하고-있다면-어떻게-이-데이터의-변화를-추적하며-관리를-하면-좋을까\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%9F%AC-%ED%95%A8%EC%88%98%EA%B0%80-%EC%98%A4%EB%A6%AC%EC%A7%84%EC%9D%B4-%EA%B0%99%EC%9D%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B3%A0-%EC%9E%88%EB%8B%A4%EB%A9%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9D%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EB%B3%80%ED%99%94%EB%A5%BC-%EC%B6%94%EC%A0%81%ED%95%98%EB%A9%B0-%EA%B4%80%EB%A6%AC%EB%A5%BC-%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84%EA%B9%8C\" aria-label=\"여러 함수가 오리진이 같은 데이터를 활용하고 있다면 어떻게 이 데이터의 변화를 추적하며 관리를 하면 좋을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러 함수가 오리진이 같은 데이터를 활용하고 있다면 어떻게 이 데이터의 변화를 추적하며 관리를 하면 좋을까</h3>\n<ol>\n<li>\n<h4 id=\"데이터를-만들어내는-주체와-그-데이터를-사용하며-의존하는-주체를-분리하여-커플링이-일어나지-않아야-한다고-생각합니다\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%82%B4%EB%8A%94-%EC%A3%BC%EC%B2%B4%EC%99%80-%EA%B7%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B0-%EC%9D%98%EC%A1%B4%ED%95%98%EB%8A%94-%EC%A3%BC%EC%B2%B4%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%98%EC%97%AC-%EC%BB%A4%ED%94%8C%EB%A7%81%EC%9D%B4-%EC%9D%BC%EC%96%B4%EB%82%98%EC%A7%80-%EC%95%8A%EC%95%84%EC%95%BC-%ED%95%9C%EB%8B%A4%EA%B3%A0-%EC%83%9D%EA%B0%81%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"데이터를 만들어내는 주체와 그 데이터를 사용하며 의존하는 주체를 분리하여 커플링이 일어나지 않아야 한다고 생각합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터를 만들어내는 주체와, 그 데이터를 사용하며, 의존하는 주체를 분리하여 커플링이 일어나지 않아야 한다고 생각합니다</h4>\n</li>\n<li>다수의 함수가 오리진이 같은 데이터를 사용한다면, 그 말은 곧 함수는 동기화 된 최신의 데이터를 가지거나, 일회성으로 Props형식으로 데이터를 자식으로 넘겨주며 생명을 다 할 수 있습니다.</li>\n<li>특정 주제로 묶은 데이터의 집합을 원하는 함수에게만 전달하고, 데이터가 변경 되었을 시에만 데이터 업데이트가 진행되게 만들고 싶었습니다.</li>\n<li>위에서 언급한 바와 같이 데이터를 만드는 주체는 데이터를 받는 주체를 몰라도 됩니다. 해당 행동을 하는 함수는 그저 행위목적에만 집중합니다 (Reactive)</li>\n</ol>\n<h4 id=\"문제-해결을-위한-여러-방법들을-찾아-보던-중-네트워크-방법론의-뿌리를-가진-pubsub-messaging-패턴을-알게-되었습니다\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%97%AC%EB%9F%AC-%EB%B0%A9%EB%B2%95%EB%93%A4%EC%9D%84-%EC%B0%BE%EC%95%84-%EB%B3%B4%EB%8D%98-%EC%A4%91-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%9D%98-%EB%BF%8C%EB%A6%AC%EB%A5%BC-%EA%B0%80%EC%A7%84-pubsub-messaging-%ED%8C%A8%ED%84%B4%EC%9D%84-%EC%95%8C%EA%B2%8C-%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"문제 해결을 위한 여러 방법들을 찾아 보던 중 네트워크 방법론의 뿌리를 가진 pubsub messaging 패턴을 알게 되었습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결을 위한 여러 방법들을 찾아 보던 중, 네트워크 방법론의 뿌리를 가진 PubSub Messaging 패턴을 알게 되었습니다.</h4>\n<p>( <small> 이는 프론트엔드 프레임워크/라이브러리 상태관리 패턴인  Flux의 기반이 됩니다. </small> )</p>\n<p>간단히 해당 패턴의 구조를 제가 만들고자 하는 스토어 라이브러리에 비교하여 설명을 해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> pipe <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./helper.js'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * \n * @param {*} msg 개수에 상관없이 [] 배열에 초기에 저장할 객체 전달\n * @param {*} sub 스토어를 구독할 구독자(함수)를 배열에 담아 전달\n */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Store</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg<span class=\"token punctuation\">,</span> sub</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 메세지 저장 객체</span>\n    <span class=\"token keyword\">let</span> _store <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> topics <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token punctuation\">{</span>\n        topics<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">topic</span> <span class=\"token operator\">=></span> _store<span class=\"token punctuation\">[</span>topic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>_store<span class=\"token punctuation\">[</span>topic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">subscribe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> topics<span class=\"token punctuation\">,</span> sub <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> topic <span class=\"token keyword\">of</span> topics<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            _store<span class=\"token punctuation\">[</span>topic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>subs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>sub<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> topics <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">topic</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> store<span class=\"token punctuation\">[</span>topic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msgs<span class=\"token punctuation\">,</span> sub</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> topics <span class=\"token operator\">=</span> msgs<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> prevStore <span class=\"token operator\">=</span> _store<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>topic<span class=\"token punctuation\">]</span>\n\n            <span class=\"token keyword\">const</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">.</span>topic<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    data<span class=\"token operator\">:</span> prevStore <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>prevStore<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>cur<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>cur<span class=\"token punctuation\">.</span>data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    subs<span class=\"token operator\">:</span> prevStore <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>prevStore<span class=\"token punctuation\">[</span><span class=\"token string\">'subs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>_store<span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span>\n            acc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">.</span>topic<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">return</span> acc\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>topics<span class=\"token punctuation\">,</span> sub<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pubSubPipe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msgs<span class=\"token punctuation\">,</span> subs</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span> <span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span> <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>msgs<span class=\"token punctuation\">,</span> subs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> subscribe<span class=\"token punctuation\">,</span> ack <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span>\n\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> setData<span class=\"token punctuation\">,</span> pubSubPipe<span class=\"token punctuation\">,</span> subscribe<span class=\"token punctuation\">,</span> ack<span class=\"token punctuation\">,</span> getData<span class=\"token operator\">:</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>_store<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Store 생성자를 초기화 때와 분리한다\n * @param {*} msgs 데이터 정보\n * @param {*} subs 데이터를 구독하는 함수\n *   \n */</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">store</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msgs<span class=\"token punctuation\">,</span> subs</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pubSubStore <span class=\"token operator\">=</span> <span class=\"token function\">Store</span><span class=\"token punctuation\">(</span>msgs<span class=\"token punctuation\">,</span> subs<span class=\"token punctuation\">)</span>\n    pubSubStore<span class=\"token punctuation\">.</span><span class=\"token function\">pubSubPipe</span><span class=\"token punctuation\">(</span>msgs<span class=\"token punctuation\">,</span> subs<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> pubSubStore\n\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/posts/pubsubStore","tagSlugs":["/tag/pattern/","/tag/javascript/","/tag/functional-programming/","/tag/reactive/","/tag/pub-sub/","/tag/상태관리/"]},"frontmatter":{"date":"2021-05-25T22:40:32.169Z","description":"Publish-Subscribe messaging pattern과 함수형 패러다임을 이용한 간단한 프론트엔드 프로젝트 상태관리 라이브러리 개발과정","tags":["Pattern","Javascript","functional programming","reactive","PubSub","상태관리"],"title":"[Project-lib] PubSub 함수형 상태관리 패턴"}}},"pageContext":{"slug":"/posts/pubsubStore"}},"staticQueryHashes":["1140640941","251939775","401334301"]}